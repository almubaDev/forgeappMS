# Generated by Django 5.2.3 on 2025-06-22 04:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthorizedSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre descriptivo del sitio (ej: Banco Estado)', max_length=100)),
                ('url', models.URLField(help_text='URL base del sitio (ej: https://www.bancoestado.cl)', max_length=500)),
                ('login_url', models.URLField(help_text='URL específica de login', max_length=500)),
                ('username_selector', models.CharField(default='input[name="username"], input[name="email"], input[type="email"]', help_text='Selector CSS para el campo de usuario', max_length=200)),
                ('password_selector', models.CharField(default='input[name="password"], input[type="password"]', help_text='Selector CSS para el campo de contraseña', max_length=200)),
                ('wait_time', models.PositiveIntegerField(default=2, help_text='Tiempo de espera en segundos antes de autocompletar')),
                ('is_active', models.BooleanField(default=True, help_text='Si el sitio está activo para uso')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(help_text='Usuario propietario de las credenciales', on_delete=django.db.models.deletion.CASCADE, related_name='authorized_sites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sitio Autorizado',
                'verbose_name_plural': 'Sitios Autorizados',
                'ordering': ['name'],
                'unique_together': {('owner', 'url')},
            },
        ),
        migrations.CreateModel(
            name='StoredCredential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='Nombre de usuario o email para el login', max_length=255)),
                ('encrypted_password', models.TextField(help_text='Contraseña cifrada con AES-256')),
                ('password_salt', models.CharField(help_text='Salt único para el cifrado de esta contraseña', max_length=64)),
                ('description', models.CharField(blank=True, help_text='Descripción opcional de la credencial', max_length=200)),
                ('is_active', models.BooleanField(default=True, help_text='Si la credencial está activa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_used', models.DateTimeField(blank=True, help_text='Última vez que se usó esta credencial', null=True)),
                ('owner', models.ForeignKey(help_text='Usuario propietario de las credenciales', on_delete=django.db.models.deletion.CASCADE, related_name='stored_credentials', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(help_text='Sitio web asociado', on_delete=django.db.models.deletion.CASCADE, related_name='credentials', to='fapass.authorizedsite')),
            ],
            options={
                'verbose_name': 'Credencial Almacenada',
                'verbose_name_plural': 'Credenciales Almacenadas',
                'ordering': ['-updated_at'],
                'unique_together': {('owner', 'site', 'username')},
            },
        ),
        migrations.CreateModel(
            name='AccessToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(help_text='Token JWT o string único para autenticación', max_length=255, unique=True)),
                ('expires_at', models.DateTimeField(help_text='Fecha y hora de expiración del token')),
                ('max_uses', models.IntegerField(default=-1, help_text='Máximo número de usos (-1 = ilimitado)')),
                ('current_uses', models.IntegerField(default=0, help_text='Número actual de usos')),
                ('collaborator_email', models.EmailField(blank=True, help_text='Email del colaborador que usará este token', max_length=254)),
                ('collaborator_name', models.CharField(blank=True, help_text='Nombre del colaborador', max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Si el token está activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(blank=True, help_text='Última vez que se usó este token', null=True)),
                ('owner', models.ForeignKey(help_text='Usuario que genera el token', on_delete=django.db.models.deletion.CASCADE, related_name='access_tokens', to=settings.AUTH_USER_MODEL)),
                ('credential', models.ForeignKey(help_text='Credencial a la que da acceso este token', on_delete=django.db.models.deletion.CASCADE, related_name='access_tokens', to='fapass.storedcredential')),
            ],
            options={
                'verbose_name': 'Token de Acceso',
                'verbose_name_plural': 'Tokens de Acceso',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_url', models.URLField(help_text='URL donde se usó el token', max_length=500)),
                ('action', models.CharField(choices=[('validate', 'Validación de Token'), ('credential_request', 'Solicitud de Credenciales'), ('autocomplete', 'Autocompletado Realizado'), ('error', 'Error en el Proceso')], default='validate', help_text='Tipo de acción realizada', max_length=50)),
                ('ip_address', models.GenericIPAddressField(help_text='Dirección IP desde donde se realizó el acceso')),
                ('user_agent', models.TextField(blank=True, help_text='User Agent del navegador')),
                ('success', models.BooleanField(default=True, help_text='Si la operación fue exitosa')),
                ('error_message', models.TextField(blank=True, help_text='Mensaje de error si hubo algún problema')),
                ('response_time', models.FloatField(blank=True, help_text='Tiempo de respuesta en segundos', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora del acceso')),
                ('token', models.ForeignKey(help_text='Token usado en este acceso', on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='fapass.accesstoken')),
            ],
            options={
                'verbose_name': 'Log de Acceso',
                'verbose_name_plural': 'Logs de Acceso',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='fapass_acce_timesta_736323_idx'), models.Index(fields=['token', 'timestamp'], name='fapass_acce_token_i_20133e_idx'), models.Index(fields=['ip_address'], name='fapass_acce_ip_addr_3dacda_idx')],
            },
        ),
        migrations.CreateModel(
            name='TokenUsageStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Fecha de las estadísticas')),
                ('total_accesses', models.PositiveIntegerField(default=0, help_text='Total de accesos en el día')),
                ('successful_accesses', models.PositiveIntegerField(default=0, help_text='Accesos exitosos')),
                ('failed_accesses', models.PositiveIntegerField(default=0, help_text='Accesos fallidos')),
                ('unique_tokens_used', models.PositiveIntegerField(default=0, help_text='Tokens únicos utilizados')),
                ('unique_sites_accessed', models.PositiveIntegerField(default=0, help_text='Sitios únicos accedidos')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(help_text='Usuario propietario de los tokens', on_delete=django.db.models.deletion.CASCADE, related_name='token_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Estadística de Uso',
                'verbose_name_plural': 'Estadísticas de Uso',
                'ordering': ['-date'],
                'unique_together': {('date', 'owner')},
            },
        ),
    ]
